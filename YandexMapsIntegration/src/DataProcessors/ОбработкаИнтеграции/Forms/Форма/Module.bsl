&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	Элементы.СтрокаПоиска.СписокВыбора.Очистить();
	НачалоПоиска(СтрокаПоиска);
//	ВыбранноеЗначение =  ВыбратьИзМеню(Элементы.СтрокаПоиска.СписокВыбора, Элементы.СтрокаПоиска);

	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьВыборИзМеню", ЭтотОбъект);

	ПоказатьВыборИзМеню(ОписаниеОповещения, Элементы.СтрокаПоиска.СписокВыбора, Элементы.СтрокаПоиска);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыборИзМеню(ВыбранноеЗначение, Параметры) Экспорт
	Если ВыбранноеЗначение <> Неопределено Тогда
		СтрокаПоиска = ВыбранноеЗначение.Значение;
		ПолучитьДанныеМеста();
	Иначе
		СтрокаПоиска = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьКарту(Команда)
	ВывестиДанныеТС();
КонецПроцедуры

&НаКлиенте
Процедура НачалоПоиска(Текст)
	Если СтрДлина(Текст) > 3 Тогда
		НачалоПоискаНаСервере(Текст);
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ПолучитьДанныеМеста()
	
	СимволПоиска = СтрНайти(СтрокаПоиска, " · ");
	
	
	Если СимволПоиска <> 0 Тогда
		ЗначениеПоиска = Сред(СтрокаПоиска, СимволПоиска +3);
	Иначе
		ЗначениеПоиска = СтрокаПоиска; 	
	КонецЕсли;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	РезультатПоиска = ОбъектОбработки.ПолучитьДанныеМеста(ЗначениеПоиска);

	Если РезультатПоиска.Свойство("response") И РезультатПоиска.response.Свойство("GeoObjectCollection")
		И РезультатПоиска.response.GeoObjectCollection.featureMember.Количество() > 0 Тогда

		Точка = РезультатПоиска.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;

		СимволРазделителя = СтрНайти(Точка, " ");

		Долгота = СокрЛП(Лев(Точка, СимволРазделителя));

		Широта  = СокрЛП(Сред(Точка, СимволРазделителя));

		Адрес  = ОбъектОбработки.ПолучитьАдрес(СокрЛП(ЗначениеПоиска), Долгота, Широта); 

	КонецЕсли;

	Элементы.СтрокаПоиска.СписокВыбора.Очистить();


КонецПроцедуры

&НаКлиенте
Процедура ВывестиДанныеТС() Экспорт
	МассивТС = ПолучитьМассивТС();
	
	Элементы.ПолеHTML.Документ.defaultView.removeAllPoints();
	
	Для Каждого ДанныеТС  Из МассивТС Цикл
		ОтобразитьТочкуНаКарте(ДанныеТС);
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьМассивТС()
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КоординатыТранспортныхСредствСрезПоследних.ТранспортноеСредство,
	|	КоординатыТранспортныхСредствСрезПоследних.Долгота,
	|	КоординатыТранспортныхСредствСрезПоследних.Широта,
	|	ТранспортныеСредства.Автомобиль,
	|	ТранспортныеСредства.Водитель,
	|	ТранспортныеСредства.Категория,
	|	ТранспортныеСредства.СубКатегория,
	|	ТранспортныеСредства.КоличествоЗаказов
	|ИЗ
	|	РегистрСведений.КоординатыТранспортныхСредств.СрезПоследних КАК КоординатыТранспортныхСредствСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТранспортныеСредства КАК ТранспортныеСредства
	|		ПО КоординатыТранспортныхСредствСрезПоследних.ТранспортноеСредство = ТранспортныеСредства.Ссылка");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивТС = Новый Массив();
	
	Пока Выборка.Следующий() Цикл
		СтруктураДанных = Новый Структура("Водитель,Автомобиль,Категория,СубКатегория,КоличествоЗаказов,Долгота,Широта");
		СтруктураДанных.Водитель = Выборка.Водитель;
		СтруктураДанных.Автомобиль = Выборка.Автомобиль;
		СтруктураДанных.Категория = Выборка.Категория;
		СтруктураДанных.СубКатегория = Выборка.СубКатегория;
		СтруктураДанных.КоличествоЗаказов = Выборка.КоличествоЗаказов;
		СтруктураДанных.Долгота = Выборка.Долгота;
		СтруктураДанных.Широта = Выборка.Широта;
		
		МассивТС.Добавить(СтруктураДанных);
	КонецЦикла;
	
	Возврат МассивТС;
	
КонецФункции


&НаКлиенте
Процедура ОтобразитьТочкуНаКарте(ДанныеТС)
	
	Координаты = ПолучитьКоординатыТочки(ДанныеТС);
	
	Подсказка = СформиоватьПодсказку(ДанныеТС);
	
	Элементы.ПолеHTML.Документ.defaultView.setPoints(Координаты.Широта,Координаты.Долгота,Подсказка);
КонецПроцедуры

&НаКлиенте
Функция СформиоватьПодсказку(ДанныеТС)
	
	ШаблонПодсказки = "Sürücü:%1
	|Avtomobil:%2
	|Kateqoriya:%3
	|Subkateqoriya:%4
	|Üstündə olan sifariş:%5";
	
	Возврат СтрШаблон(ШаблонПодсказки,ДанныеТС.Водитель,
	ДанныеТС.Автомобиль,
	ДанныеТС.Категория,
	ДанныеТС.СубКатегория,
	Формат(ДанныеТС.КоличествоЗаказов, "ЧЦ=10;"));
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ВывестиДанныеТС",5 );
КонецПроцедуры


&НаСервере
Функция ПолучитьКоординатыТочки(ДанныеТС)
	Структура = Новый Структура;
	Структура.Вставить("Широта",Формат(ДанныеТС.Широта,"ЧРД=.;" ));
	Структура.Вставить("Долгота",Формат(ДанныеТС.Долгота,"ЧРД=.;" ));
	
	Возврат Структура;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Константы.MappableAPIKey.Получить()) Тогда
		Сообщить("Заполните API KEY (Mappble)!");
		Элементы.СтрокаПоиска.Доступность = Ложь;
	КонецЕсли;
	
	
	Если Не ЗначениеЗаполнено(Константы.YandexAPIKEY.Получить()) Тогда
		Сообщить("Заполните API KEY (Yandex)!");
		Элементы.ПолеHTML.Доступность = Ложь;
	Иначе
		ИнициализироватьКарту();
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ИнициализироватьКарту()
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ПолеHTML = ОбъектОбработки.ПолучитьТекстШаблона();
КонецПроцедуры



&НаСервере
Процедура НачалоПоискаНаСервере(Текст)
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	РезультатПоиска = ОбъектОбработки.ПолучитьРезультатПоискаМест(Текст);

	Если РезультатПоиска.Свойство("results") Тогда
		Для Каждого Элемент Из РезультатПоиска.results Цикл
			Элементы.СтрокаПоиска.СписокВыбора.Добавить(Элемент.address.formatted_address,Элемент.title.text);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры