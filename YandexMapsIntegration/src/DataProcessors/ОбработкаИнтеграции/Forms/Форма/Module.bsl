&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	Элементы.СтрокаПоиска.СписокВыбора.Очистить();
	НачалоПоиска(СтрокаПоиска);
//	ВыбранноеЗначение =  ВыбратьИзМеню(Элементы.СтрокаПоиска.СписокВыбора, Элементы.СтрокаПоиска);

	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьВыборИзМеню", ЭтотОбъект);

	ПоказатьВыборИзМеню(ОписаниеОповещения, Элементы.СтрокаПоиска.СписокВыбора, Элементы.СтрокаПоиска);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыборИзМеню(ВыбранноеЗначение, Параметры) Экспорт
	Если ВыбранноеЗначение <> Неопределено Тогда
		СтрокаПоиска = ВыбранноеЗначение.Значение;
		ПолучитьДанныеМеста();
		ОтобразитьТочкуНаКарте();
	Иначе
		СтрокаПоиска = "";
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура НачалоПоиска(Текст)
	Если СтрДлина(Текст) > 3 Тогда
		НачалоПоискаНаСервере(Текст);
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ПолучитьДанныеМеста()
	
	СимволПоиска = СтрНайти(СтрокаПоиска, " · ");
	
	
	Если СимволПоиска <> 0 Тогда
		ЗначениеПоиска = Сред(СтрокаПоиска, СимволПоиска +3);
	Иначе
		ЗначениеПоиска = СтрокаПоиска; 	
	КонецЕсли;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	РезультатПоиска = ОбъектОбработки.ПолучитьДанныеМеста(ЗначениеПоиска);

	Если РезультатПоиска.Свойство("response") И РезультатПоиска.response.Свойство("GeoObjectCollection")
		И РезультатПоиска.response.GeoObjectCollection.featureMember.Количество() > 0 Тогда

		Точка = РезультатПоиска.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos;

		СимволРазделителя = СтрНайти(Точка, " ");

		Долгота = СокрЛП(Лев(Точка, СимволРазделителя));

		Широта  = СокрЛП(Сред(Точка, СимволРазделителя));

		Адрес  = ОбъектОбработки.ПолучитьАдрес(СокрЛП(ЗначениеПоиска), Долгота, Широта); 

	КонецЕсли;

	Элементы.СтрокаПоиска.СписокВыбора.Очистить();


КонецПроцедуры


&НаКлиенте
Процедура ОтобразитьТочкуНаКарте()
	
	Координаты = ПолучитьКоординатыТочки();
	
	Элементы.ПолеHTML.Документ.defaultView.setPoints(Координаты.Широта,Координаты.Долгота);
КонецПроцедуры

&НаСервере
Функция ПолучитьКоординатыТочки()
	Структура = Новый Структура;
	Структура.Вставить("Широта",Формат(Адрес.Широта,"ЧРД=.;" ));
	Структура.Вставить("Долгота",Формат(Адрес.Долгота,"ЧРД=.;" ));
	
	Возврат Структура;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Константы.MappableAPIKey.Получить()) Тогда
		Сообщить("Заполните API KEY (Mappble)!");
		Элементы.СтрокаПоиска.Доступность = Ложь;
	КонецЕсли;
	
	
	Если Не ЗначениеЗаполнено(Константы.YandexAPIKEY.Получить()) Тогда
		Сообщить("Заполните API KEY (Yandex)!");
		Элементы.ПолеHTML.Доступность = Ложь;
	Иначе
		ИнициализироватьКарту();
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ИнициализироватьКарту()
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ПолеHTML = ОбъектОбработки.ПолучитьТекстШаблона();
КонецПроцедуры



&НаСервере
Процедура НачалоПоискаНаСервере(Текст)
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	РезультатПоиска = ОбъектОбработки.ПолучитьРезультатПоискаМест(Текст);

	Если РезультатПоиска.Свойство("results") Тогда
		Для Каждого Элемент Из РезультатПоиска.results Цикл
			Элементы.СтрокаПоиска.СписокВыбора.Добавить(Элемент.address.formatted_address,Элемент.title.text);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры